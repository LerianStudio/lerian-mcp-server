name: Release Pipeline

on:
  push:
    branches:
      - main        # Production releases only
      - develop     # Pre-releases for testing
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    outputs:
      skip_release: ${{ steps.semantic.outputs.new_release_published == 'false' }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
    steps:
      - name: Generate GitHub App Token
        id: app-token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.LERIAN_STUDIO_MIDAZ_PUSH_BOT_APP_ID }}
          private_key: ${{ secrets.LERIAN_STUDIO_MIDAZ_PUSH_BOT_PRIVATE_KEY }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install dependencies
        run: npm ci

      - name: Build for release
        run: npm run build:release

      - name: Import GPG key
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.LERIAN_CI_CD_USER_GPG_KEY }}
          passphrase: ${{ secrets.LERIAN_CI_CD_USER_GPG_KEY_PASSWORD }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Configure Git
        run: |
          git config user.name "${{ secrets.LERIAN_CI_CD_USER_NAME }}"
          git config user.email "${{ secrets.LERIAN_CI_CD_USER_EMAIL }}"

      - name: Configure npm authentication
        run: |
          # Create .npmrc with proper scoped registry configuration
          echo "@lerianstudio:registry=https://registry.npmjs.org/" > ~/.npmrc
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> ~/.npmrc
          echo "registry=https://registry.npmjs.org/" >> ~/.npmrc
          
          # Debug: Show .npmrc content (without token)
          echo "NPM configuration:"
          cat ~/.npmrc | sed 's/:_authToken=.*/:_authToken=***HIDDEN***/'
          
          # Verify npm authentication
          echo "Testing npm authentication..."
          npm whoami
          
          # Test access to lerianstudio organization
          echo "Testing organization access..."
          npm access list packages @lerianstudio 2>/dev/null || echo "No packages found in @lerianstudio (this is expected for first publish)"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 22.0.12
          extra_plugins: |
            conventional-changelog-conventionalcommits@6.1.0
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GIT_AUTHOR_NAME: ${{ secrets.LERIAN_CI_CD_USER_NAME }}
          GIT_AUTHOR_EMAIL: ${{ secrets.LERIAN_CI_CD_USER_EMAIL }}
          GIT_COMMITTER_NAME: ${{ secrets.LERIAN_CI_CD_USER_NAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.LERIAN_CI_CD_USER_EMAIL }}


